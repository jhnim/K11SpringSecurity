<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
 
	<!-- 
	시큐리티 3단계 : 로그인을 JDBC연동으로 커스터마이징 하기
		jdbc-user-service 
			data-source-ref : 데이터 베이스 연결을 나타내는 dataSource로 해당 빈은
							반드시 root-context에서 기술해야 한다.
				role-prefix : "ROLE_"와 같은 권한명 앞에 붙는 접두어를 지정한다.
						만약 해당 항목을 "ROLE_"로 지정하면 테이블에서는 "USER"와 같이 입력해야 한다.
				users-by-username-query : 아이디를 이용하여 사용자 정보를 가져오는 쿼리문을 작성한다.
				authorities-by-username-query : 아이디를 이용하여 권한정보를 가져오는 쿼리문을 작성한다.
	-->
	<http>
		<!-- 로그인 페이지는 권한을 얻은 후 접근하는 것이 아니라 권한이 없는 사용자가 권한을 얻기 위해 접근하므로, 모든 사용자가 접근할 수  있도록 설정해야 한다. -->
		<intercept-url pattern="/security2/login.do" access="permitAll" />
		<!-- 해당 경로는 ADMIN권한을 얻은 후 접근할 수 있다. -->
		<intercept-url pattern="/security2/admin/**" access="hasRole('ADMIN')" />
		<!-- USER, ADMIN 권한 중 하나의 권한만 있으면 접근할 수 있다. -->
		<intercept-url pattern="/security2/**" access="hasAnyRole('USER,ADMIN')" />
		<!-- 권한없이 누구나 접근가능한 경로를 설정한다. -->
		<intercept-url pattern="/**" access="permitAll" />
		
		<!-- 로그인폼과 로그아웃을 기본설정 그대로 사용한다. -->	
		<form-login login-page="/security2/login.do" default-target-url="/security2/index.do"
			authentication-failure-url="/security2/login.do?error" login-processing-url="/loginAction" 
			username-parameter="id" password-parameter="pass"/>
		<logout logout-url="/security2/logout" logout-success-url="/security2/accessDenied.do" />
		<access-denied-handler error-page="/security2/accessDenied.do "/>
	</http>
	<!-- 권한설정을 위한 엘리먼트 -->
	<!-- 각 권한을 획득하기 위한 설정부분  -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				role-prefix="ROLE_"
				users-by-username-query="SELECT 
					user_id, user_pw, enabled 
					FROM security_admin WHERE user_id=?"
				authorities-by-username-query="SELECT 
					user_id, authority 
					FROM security_admin WHERE user_id=?" />		
		</authentication-provider>
	</authentication-manager>
</beans:beans>
